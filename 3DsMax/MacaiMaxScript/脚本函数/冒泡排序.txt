myArray = #("100","12","2","56", "13B", "A2", "a3","a10", "Z0","0Z", "3234", "G","j")
myA = #("100","12","2","56", "B", "A", "a","k", "Z", "3234", "G","j")
myNumber = #()
myString = #()
lastArray = #()
fn Yvi_BubblingSortArray yourArray =
(
	num = yourArray.count--数据元素个数
	for i = 1 to num do
	(
		if ((yourArray[i] as integer) != undefined) then--如果数组中的元素是整数
		(
			append myNumber (yourArray[i] as integer)--那么放进一个整数数组里
		)
		else
			append myString (yourArray[i])--否则放进字符串数组里
	)

	--对数字数组进行冒泡排序
	numCount = myNumber.count
	for i = 1 to numCount-1 do--比较num-1次 
	(
		for j = 1 to numCount-1 do
		(
			if(myNumber[j] > myNumber[j+1])do--交换顺序 
			(
				temp = myNumber[j]
				myNumber[j] = myNumber[j+1]
				myNumber[j+1] = temp
			)
		)	
	)
	myNumber
	
	--对字符串数组冒泡排序
	strCount = myString.count
	for i = 1 to strCount-1 do--比较num-1次 
	(
		for j = 1 to strCount-1 do
		(
			if(myString[j] > myString[j+1])do--交换顺序 
			(
				temp = myString[j]
				myString[j] = myString[j+1]
				myString[j+1] = temp
			)
		)	
	)
	myString
	
	lastArray = myNumber + myString--把整理好的数组元素放到一个大数组里
)--排序函数结束

Yvi_BubblingSortArray myA
