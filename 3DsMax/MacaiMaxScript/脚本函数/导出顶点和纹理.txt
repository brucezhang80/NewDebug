for f = 1 to num_faces do
(
    channel = 1
    Face = getFace tmesh f
    TFace = meshop.getMapFace tmesh channel f
    TVx = meshop.getMapVert tmesh channel (TFace.x as integer)
    TVy = meshop.getMapVert tmesh channel (TFace.y as integer)
    TVz = meshop.getMapVert tmesh channel (TFace.z as integer)                
    for v = 1 to 3 do
    (
        if FaceCCW.state == true then
        (
            case v of
            (
                3: (curVert = Face.x; curTVert = TVx)
                2: (curVert = Face.y; curTVert = TVy)
                1: (curVert = Face.z; curTVert = TVz)
            )
        ) else (
            case v of
            (
                1: (curVert = Face.x; curTVert = TVx)
                2: (curVert = Face.y; curTVert = TVy)
                3: (curVert = Face.z; curTVert = TVz)
            )
        )
        Vert = getvert tmesh curVert
        VertNorm = getNormal tmesh curVert

        VertX = formattedPrint Vert.x format:".6f"
        VertY = formattedPrint Vert.y format:".6f"
        VertZ = formattedPrint Vert.z format:".6f"
        VertNormX = formattedPrint VertNorm.x format:".6f"
        VertNormY = formattedPrint VertNorm.y format:".6f"
        VertNormZ = formattedPrint VertNorm.z format:".6f"
        VertU = formattedPrint curTVert[1] format:".6f"
        VertV = formattedPrint curTVert[2] format:".6f"

        append AryVerts ("VT " + VertX + " " + VertY + " " + VertZ + " " + VertNormX + " " + VertNormY + " " + VertNormZ + " " + VertU + " " + VertV + "\n")
    )
)